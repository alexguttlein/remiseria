Object subclass: #AlgoRemis	instanceVariableNames: 'choferes viajes tarifa'	classVariableNames: ''	package: 'TP1'!!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 12:39'!crearViajeConDestino: unNombreDestino aKms: unValorKm peajes: unaCantidadDePeajes	viajes crearViajeConDestino: unNombreDestino aKms: unValorKm peajes: unaCantidadDePeajes.! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 18:15'!viajeMasBaratoParaDestino: unNombreDestino	|unViaje unChofer|	unViaje := viajes obtenerViaje: unNombreDestino. "me consigue el viaje a analizar"	unChofer := choferes obtenerChoferMasBaratoA: unViaje. "me busca el chofer mas barato al destino"	unViaje asignarChofer: unChofer.	unViaje asignarMenorPrecio: (unChofer calcularTarifaDe: unViaje).	^ unViaje.	! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 18:50'!registrarChoferDeAutoElectrico: unNombre conTarifaInicial: unaTarifa	choferes registrarChoferDeAutoElectrico: unNombre conTarifaInicial: unaTarifa.! !!AlgoRemis methodsFor: 'as yet unclassified' stamp: 'AG 10/1/2021 21:22'!registrarChoferDeAuto: unNombre conTarifaInicial: unaTarifa	choferes registrarChoferDeAuto: unNombre conTarifaInicial: unaTarifa.! !!AlgoRemis methodsFor: 'initialization' stamp: 'AG 10/10/2021 19:08'!initialize	choferes := Choferes new.	viajes := Viajes new.! !Object subclass: #ChoferAuto	instanceVariableNames: 'nombre tarifa tarifaPorKm terifaPorPeaje tarifaPorPeaje porcentajeDescuento'	classVariableNames: ''	package: 'TP1'!!ChoferAuto methodsFor: 'initialization' stamp: 'AG 10/10/2021 16:58'!initialize 	tarifaPorKm := 50.	tarifaPorPeaje := 100.! !!ChoferAuto methodsFor: 'initialization' stamp: 'AG 10/1/2021 22:43'!setNombre: unNombre 	nombre := unNombre! !!ChoferAuto methodsFor: 'initialization' stamp: 'AG 10/10/2021 19:26'!calcularTarifaDe: unViaje	|precioKms precioPeajes|	precioKms := (unViaje getKms) * tarifaPorKm.	precioPeajes := (unViaje getPeajes) * tarifaPorPeaje.	porcentajeDescuento := unViaje getDescuento.		^tarifa calcularTarifaConKms: precioKms yPeajes: precioPeajes yDescuentos: porcentajeDescuento! !!ChoferAuto methodsFor: 'initialization' stamp: 'AG 10/10/2021 19:39'!setTarifa: unaTarifa	tarifa := Tarifa new.	tarifa establecerTarifaBase: unaTarifa.! !!ChoferAuto methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 19:39'!precio	^tarifa! !!ChoferAuto methodsFor: 'accessing' stamp: 'AG 10/10/2021 17:55'!nombre	^nombre! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ChoferAuto class	instanceVariableNames: ''!!ChoferAuto class methodsFor: 'initialization' stamp: 'AG 10/11/2021 10:29'!conNombre: unNombre yTarifa: unaTarifa	|unChofer|	unChofer := ChoferAuto new.	unChofer setNombre: unNombre.	unChofer setTarifa: unaTarifa.	^ unChofer! !Object subclass: #ChoferAutoElectrico	instanceVariableNames: 'tarifaPorKm tarifaPorPeaje tarifa nombre porcentajeDescuento'	classVariableNames: ''	package: 'TP1'!!ChoferAutoElectrico methodsFor: 'accessing' stamp: 'AG 10/10/2021 18:05'!precio	^tarifa! !!ChoferAutoElectrico methodsFor: 'accessing' stamp: 'AG 10/10/2021 18:05'!nombre	^nombre! !!ChoferAutoElectrico methodsFor: 'initialization' stamp: 'AG 10/10/2021 18:05'!initialize 	tarifaPorKm := 30.	tarifaPorPeaje := 50.! !!ChoferAutoElectrico methodsFor: 'initialization' stamp: 'AG 10/10/2021 18:06'!setNombre: unNombre 	nombre := unNombre! !!ChoferAutoElectrico methodsFor: 'initialization' stamp: 'AG 10/10/2021 19:27'!calcularTarifaDe: unViaje	|precioKms precioPeajes|	precioKms := (unViaje getKms) * tarifaPorKm.	precioPeajes := (unViaje getPeajes) * tarifaPorPeaje.	porcentajeDescuento := unViaje getDescuento.		^tarifa calcularTarifaConKms: precioKms yPeajes: precioPeajes yDescuentos: porcentajeDescuento! !!ChoferAutoElectrico methodsFor: 'initialization' stamp: 'AG 10/10/2021 18:06'!setTarifa: unaTarifa	tarifa := Tarifa new.	tarifa establecerTarifaBase: unaTarifa.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ChoferAutoElectrico class	instanceVariableNames: ''!!ChoferAutoElectrico class methodsFor: 'initialization' stamp: 'AG 10/11/2021 10:29'!conNombre: unNombre yTarifa: unaTarifa	|unChofer|	unChofer := ChoferAutoElectrico new.	unChofer setNombre: unNombre.	unChofer setTarifa: unaTarifa.	^ unChofer! !Error subclass: #ChoferNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Choferes	instanceVariableNames: 'choferes'	classVariableNames: ''	package: 'TP1'!!Choferes methodsFor: 'as yet unclassified' stamp: 'AG 10/11/2021 18:28'!registrarChoferDeAutoElectrico: unNombre conTarifaInicial: unaTarifa	|chofer|	chofer := ChoferAutoElectrico conNombre: unNombre yTarifa: unaTarifa.	choferes add: chofer.! !!Choferes methodsFor: 'initialization' stamp: 'AG 10/1/2021 21:19'!initialize 	choferes := OrderedCollection new.! !!Choferes methodsFor: 'initialization' stamp: 'AG 10/11/2021 11:44'!obtenerChoferMasBaratoA: unViaje	|menorTarifa choferBuscado|	menorTarifa := 999999999999999.		"Se busca cual es la tarifa mas barata para el viaje"	choferes do: [ :alguien|		((alguien calcularTarifaDe: unViaje) < menorTarifa ) ifTrue: [ 			menorTarifa := (alguien calcularTarifaDe: unViaje)].		].		"Se busca a quÃ© chofer corresponde dicha tarifa encontrada"	choferes do: [ :alguien|		((alguien calcularTarifaDe: unViaje) = menorTarifa) ifTrue: [ choferBuscado := alguien ] 		].	(choferBuscado isNil) ifTrue: [ ChoferNoEncontradoError signal ].		^choferBuscado! !!Choferes methodsFor: 'initialization' stamp: 'AG 10/11/2021 18:28'!registrarChoferDeAuto: unNombre conTarifaInicial: unaTarifa	|chofer|	chofer := ChoferAuto conNombre: unNombre yTarifa: unaTarifa.	choferes add: chofer.! !Object subclass: #ConDescuento	instanceVariableNames: 'valor'	classVariableNames: ''	package: 'TP1'!!ConDescuento methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 22:14'!valor	^ 0.2! !!ConDescuento methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 21:14'!tieneDescuento	^ true! !Error subclass: #DestinoNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #SinDescuento	instanceVariableNames: 'valor'	classVariableNames: ''	package: 'TP1'!!SinDescuento methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 22:14'!valor	^ 1! !!SinDescuento methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 21:14'!tieneDescuento	^ false! !Object subclass: #Tarifa	instanceVariableNames: 'tarifaBase'	classVariableNames: ''	package: 'TP1'!!Tarifa methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 19:43'!getTarifaBase	^tarifaBase! !!Tarifa methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 21:11'!calcularTarifaConKms: elPrecioPorKms yPeajes: elPrecioPorPeajes yDescuentos: unDescuento	^ (tarifaBase + elPrecioPorKms + elPrecioPorPeajes) * (unDescuento valor).! !!Tarifa methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 16:33'!establecerTarifaBase: unaTarifa	tarifaBase := unaTarifa! !Object subclass: #Viaje	instanceVariableNames: 'destino kms peajes chofer precio descuento'	classVariableNames: ''	package: 'TP1'!!Viaje methodsFor: 'accessing' stamp: 'AG 10/10/2021 17:58'!precio	^precio.! !!Viaje methodsFor: 'accessing' stamp: 'AG 10/10/2021 17:54'!chofer	^ chofer nombre! !!Viaje methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 12:42'!getDestino	^destino.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 22:15'!verificarDescuento	((self getDestino) includesSubstring: 'Hospital') ifTrue: [ ^ ConDescuento new ].	^ SinDescuento new.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 17:58'!asignarMenorPrecio: unPrecio	precio := unPrecio! !!Viaje methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 16:37'!asignarChofer: unChofer	chofer := unChofer! !!Viaje methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 12:43'!getKms	^kms! !!Viaje methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 21:11'!crearViajeConDestino: unNombreDestino aKms: unValorKm peajes: unaCantidadDePeajes.	destino := unNombreDestino.	kms := unValorKm.	peajes := unaCantidadDePeajes.	descuento := self verificarDescuento.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 19:26'!getDescuento	^ descuento! !!Viaje methodsFor: 'as yet unclassified' stamp: 'AG 10/10/2021 12:43'!getPeajes	^ peajes! !Object subclass: #Viajes	instanceVariableNames: 'viajes'	classVariableNames: ''	package: 'TP1'!!Viajes methodsFor: 'as yet unclassified' stamp: 'AG 10/11/2021 10:39'!crearViajeConDestino: unNombreDestino aKms: unValorKm peajes: unaCantidadDePeajes	|viaje|	viaje := Viaje new.	viaje crearViajeConDestino: unNombreDestino aKms: unValorKm peajes: unaCantidadDePeajes.	viajes add: viaje! !!Viajes methodsFor: 'as yet unclassified' stamp: 'AG 10/11/2021 11:14'!obtenerViaje: unNombreDestino	|viajeBuscado|	[	viajeBuscado := viajes detect: [ :unViaje |		unViaje getDestino = unNombreDestino 		 ].		^ viajeBuscado.	] on: NotFound do: [ DestinoNoEncontradoError signal ]! !!Viajes methodsFor: 'initialization' stamp: 'AG 10/10/2021 12:44'!initialize 	viajes := OrderedCollection new.! !